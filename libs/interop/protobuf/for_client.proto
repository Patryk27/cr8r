syntax = "proto3";

package cr8r.for_client;

import "core/report.proto";

import "for_client/hello.proto";
import "for_client/attachment/create.proto";
import "for_client/experiment/abort.proto";
import "for_client/experiment/create.proto";
import "for_client/experiment/find.proto";
import "for_client/experiment/watch.proto";
import "for_client/report/find.proto";
import "for_client/runner/find.proto";

service ForClient {
    rpc Hello (PHelloRequest) returns (PHelloReply);

    // Attachment-oriented methods
    rpc CreateAttachment (stream PCreateAttachmentRequest) returns (PCreateAttachmentReply);

    // Experiment-oriented methods
    rpc CreateExperiment (PCreateExperimentRequest) returns (PCreateExperimentReply);
    rpc AbortExperiment (PAbortExperimentRequest) returns (PAbortExperimentReply);
    rpc WatchExperiment (PWatchExperimentRequest) returns (stream core.PReport);
    rpc FindExperiments (PFindExperimentsRequest) returns (PFindExperimentsReply);

    // Report-oriented methods
    rpc FindReports (PFindReportsRequest) returns (PFindReportsReply);

    // Runner-oriented methods
    rpc FindRunners (PFindRunnersRequest) returns (PFindRunnersReply);
}
